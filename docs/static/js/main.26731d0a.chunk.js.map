{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCIhBG,EAVK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE9B,OACI,yBAAKC,UAAU,4DACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDC4BLK,EAxBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDJ,SAAEA,GAAe,IAAD,EACdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAY,WACTjB,EAASC,GACRiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGjB,CAACb,IAEGc,EDbwBK,CAAcnB,GAAjCU,EAFgB,EAErBJ,KAAaO,EAFQ,EAERA,QAEpB,OACI,oCACA,4BAAKb,GACHa,GAAW,sCAEb,yBAAKjB,UAAU,aAEHc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACJgB,UEgBhBY,EA9BI,WAAO,IAAD,EAEW1C,mBAAS,CAAC,cAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAMvB,OACE,oCACE,4CACA,kBAAC,EAAD,CACEA,cAAeA,IAEjB,6BAIA,4BAEIS,EAAWqB,KAAI,SAAAR,GAAQ,OACrB,kBAAC,EAAD,CACEoB,IAAKpB,EACLA,SAAUA,UCpB1BsB,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.26731d0a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >2){\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    } \r\n\r\n    return ( \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n       \r\n     );\r\n}\r\n \r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return ( \r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default GifGridItem;","export const getGifs = async(category)  => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=4C5vhrU00MFipxqIsF5pb5IiCH4zoLuj`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category);\r\n\r\n    return ( \r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p>Loading</p>}\r\n        { /* loading ? <p>Loading</p> : null */}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n                        />  \r\n                    ))    \r\n                }\r\n        </div>\r\n        </>\r\n        \r\n     );\r\n}\r\n \r\nexport default GifGrid;","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true \r\n    });\r\n\r\n    useEffect ( () => {\r\n       getGifs( category )\r\n       .then( imgs => {\r\n           setState({\r\n               data: imgs,\r\n               loading: false\r\n           }); \r\n       })  \r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n \r\n\r\n    return ( \r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory \r\n          setCategories={setCategories}\r\n        />\r\n        <hr />\r\n\r\n      \r\n\r\n        <ol>\r\n          {\r\n            categories.map(category => (\r\n              <GifGrid \r\n                key={category}\r\n                category={category}\r\n              />\r\n            ))\r\n          }\r\n        </ol>\r\n      </>\r\n     );\r\n  }\r\n   \r\n  export default GifExpertApp;  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp  />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}